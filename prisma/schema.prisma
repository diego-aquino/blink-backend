generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id
  name           String
  email          String   @unique
  hashedPassword String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  sessions UserSession[]

  createdWorkspaces Workspace[]

  workspaceMembers        WorkspaceMember[] @relation("workspace_member_user")
  createdWorkspaceMembers WorkspaceMember[] @relation("workspace_member_creator")

  createdBlinks Blink[]
}

model UserSession {
  id String @id

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  expiresAt DateTime
}

model Workspace {
  id   String @id
  name String

  creatorId String?
  creator   User?   @relation(fields: [creatorId], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  blinks  Blink[]
  members WorkspaceMember[]
}

model WorkspaceMember {
  id   String              @id
  type WorkspaceMemberType @default(DEFAULT)

  workspaceId String
  workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)

  userId String
  user   User   @relation("workspace_member_user", fields: [userId], references: [id], onDelete: Cascade)

  creatorId String?
  creator   User?   @relation("workspace_member_creator", fields: [creatorId], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([workspaceId, userId])
}

enum WorkspaceMemberType {
  ADMINISTRATOR
  DEFAULT
}

model Blink {
  id         String @id
  name       String
  url        String
  redirectId String @unique

  creatorId String?
  creator   User?   @relation(fields: [creatorId], references: [id], onDelete: SetNull)

  workspaceId String
  workspace   Workspace @relation(fields: [workspaceId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
