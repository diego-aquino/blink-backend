openapi: 3.1.0

info:
  title: Blink API REST
  version: 0.0.0
  description: API REST do Blink, um encurtador de URLs.
servers:
  - url: http://localhost:3001
    description: Servidor local de desenvolvimento
externalDocs:
  url: https://app.swaggerhub.com/apis/diego-aquino/blink-backend/0.0.0
tags:
  - name: Usuários
  - name: Autenticação
  - name: Workspaces
  - name: Blinks
  - name: Redirecionamentos

paths:
  /users:
    post:
      summary: Criar usuário
      operationId: users/create
      tags:
        - Usuários
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                  description: O nome do usuário
                  examples:
                    - Diego Aquino
                email:
                  type: string
                  format: email
                  description: O email do usuário
                  examples:
                    - diego@email.com
                password:
                  type: string
                  description: A senha do usuário
                  examples:
                    - 12345678
      responses:
        '201':
          description: Usuário criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '409':
          description: Email em uso por outro usuário
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /users/{userId}:
    parameters:
      - name: userId
        in: path
        required: true
        description: O id do usuário
        schema:
          type: string
        example: tz4a98xxat96iws9zmbrgj3a

    get:
      summary: Buscar usuário
      operationId: users/get
      tags:
        - Usuários
      security:
        - accessCookieAuth: []
      responses:
        '200':
          description: Usuário encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '403':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    patch:
      summary: Atualizar usuário
      operationId: users/update
      tags:
        - Usuários
      security:
        - accessCookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: O nome do usuário
                  examples:
                    - Diego Aquino
                email:
                  type: string
                  format: email
                  description: O email do usuário
                  examples:
                    - diego@email.com
      responses:
        '200':
          description: Usuário atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '403':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '409':
          description: Email em uso por outro usuário
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    delete:
      summary: Remover usuário
      operationId: users/delete
      tags:
        - Usuários
      security:
        - accessCookieAuth: []
      responses:
        '204':
          description: Usuário removido
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '403':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /auth/login:
    post:
      summary: Login
      operationId: auth/login
      tags:
        - Autenticação
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: O email do usuário
                  examples:
                    - diego@email.com
                password:
                  type: string
                  description: A senha do usuário
                  examples:
                    - 12345678
      responses:
        '204':
          description: Usuário autenticado
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Credenciais inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /auth/logout:
    post:
      summary: Logout
      operationId: auth/logout
      tags:
        - Autenticação
      security:
        - accessCookieAuth: []
      responses:
        '204':
          description: Usuário deslogado
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /auth/refresh:
    post:
      summary: Gerar novo token de acesso
      operationId: auth/refresh
      tags:
        - Autenticação
      security:
        - refreshCookieAuth: []
      responses:
        '204':
          description: Novo token de acesso gerado
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Credenciais inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /auth/password:
    put:
      summary: Alterar senha
      operationId: auth/password/update
      tags:
        - Autenticação
      security:
        - accessCookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - oldPassword
                - newPassword
              properties:
                oldPassword:
                  type: string
                  description: A senha atual
                  examples:
                    - 12345678
                newPassword:
                  type: string
                  description: A nova senha
                  examples:
                    - 654321
      responses:
        '204':
          description: Senha alterada
        '400':
          description: Erro de validação ou senha atual inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '403':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /workspaces:
    post:
      summary: Criar workspace
      operationId: workspaces/create
      tags:
        - Workspaces
      security:
        - accessCookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  description: O nome do workspace
                  examples:
                    - Meu workspace
      responses:
        '201':
          description: Workspace criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '403':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    get:
      summary: Listar workspaces
      operationId: workspaces/list
      tags:
        - Workspaces
      security:
        - accessCookieAuth: []
      parameters:
        - workspaceName:
          name: name
          in: query
          required: false
          description: O nome do workspace para filtrar
          schema:
            type: string
            example: Meu workspace
        - page:
          name: page
          in: query
          required: false
          description: O número da página
          schema:
            type: integer
            example: 1
        - limit:
          name: limit
          in: query
          required: false
          description: O número de workspaces por página
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: Workspaces listados
          content:
            application/json:
              schema:
                type: object
                required:
                  - workspaces
                  - total
                properties:
                  workspaces:
                    type: array
                    items:
                      $ref: '#/components/schemas/Workspace'
                  total:
                    type: integer
                    example: 1
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '403':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /workspaces/{workspaceId}:
    parameters:
      - name: workspaceId
        in: path
        required: true
        description: O id do workspace
        schema:
          type: string
        example: tz4a98xxat96iws9zmbrgj3a

    get:
      summary: Buscar workspace
      operationId: workspaces/get
      tags:
        - Workspaces
      security:
        - accessCookieAuth: []
      responses:
        '200':
          description: Workspace encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '403':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '404':
          description: Workspace não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    patch:
      summary: Atualizar workspace
      operationId: workspaces/update
      tags:
        - Workspaces
      security:
        - accessCookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: O nome do workspace
                  examples:
                    - Meu workspace
      responses:
        '200':
          description: Workspace atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workspace'
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '403':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '404':
          description: Workspace não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'
    delete:
      summary: Remover workspace
      operationId: workspaces/delete
      tags:
        - Workspaces
      security:
        - accessCookieAuth: []
      responses:
        '204':
          description: Workspace removido
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '403':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '404':
          description: Workspace não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /workspaces/{workspaceId}/members:
    parameters:
      - name: workspaceId
        in: path
        required: true
        description: O id do workspace
        schema:
          type: string
        example: tz4a98xxat96iws9zmbrgj3a

    post:
      summary: Adicionar membro
      operationId: workspaces/members/create
      tags:
        - Workspaces
      security:
        - accessCookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
              properties:
                userId:
                  type: string
                  examples:
                    - tz4a98xxat96iws9zmbrgj3a
                type:
                  $ref: '#/components/schemas/WorkspaceMemberType'
      responses:
        '201':
          description: Membro adicionado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceMember'
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '403':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '404':
          description: Workspace não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '409':
          description: Usuário já é membro do workspace
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    get:
      summary: Listar membros
      operationId: workspaces/members/list
      tags:
        - Workspaces
      security:
        - accessCookieAuth: []
      parameters:
        - memberName:
          name: name
          in: query
          required: false
          description: O nome do membro para filtrar
          schema:
            type: string
            example: Diego Aquino
        - memberType:
          name: type
          in: query
          required: false
          description: O tipo do membro para filtrar
          schema:
            $ref: '#/components/schemas/WorkspaceMemberType'
        - page:
          name: page
          in: query
          required: false
          description: O número da página
          schema:
            type: integer
            example: 1
        - limit:
          name: limit
          in: query
          required: false
          description: O número de membros por página
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: Membros listados
          content:
            application/json:
              schema:
                type: object
                required:
                  - members
                  - total
                properties:
                  members:
                    type: array
                    items:
                      $ref: '#/components/schemas/WorkspaceMember'
                  total:
                    type: integer
                    example: 1
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '403':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '404':
          description: Workspace não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /workspaces/{workspaceId}/members/{memberId}:
    parameters:
      - name: workspaceId
        in: path
        required: true
        description: O id do workspace
        schema:
          type: string
        example: tz4a98xxat96iws9zmbrgj3a
      - name: memberId
        in: path
        required: true
        description: O id do membro
        schema:
          type: string
        example: tz4a98xxat96iws9zmbrgj3a

    get:
      summary: Buscar membro
      operationId: workspaces/members/get
      tags:
        - Workspaces
      security:
        - accessCookieAuth: []
      responses:
        '200':
          description: Membro encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceMember'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '403':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '404':
          description: Membro não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    put:
      summary: Atualizar membro
      operationId: workspaces/members/update
      tags:
        - Workspaces
      security:
        - accessCookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  $ref: '#/components/schemas/WorkspaceMemberType'
      responses:
        '200':
          description: Membro atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceMember'
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '403':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '404':
          description: Membro não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    delete:
      summary: Remover membro
      operationId: workspaces/members/delete
      tags:
        - Workspaces
      security:
        - accessCookieAuth: []
      responses:
        '204':
          description: Membro removido
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '403':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '404':
          description: Membro não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /workspaces/{workspaceId}/blinks:
    parameters:
      - name: workspaceId
        in: path
        required: true
        description: O id do workspace
        schema:
          type: string
        example: tz4a98xxat96iws9zmbrgj3a

    post:
      summary: Criar blink
      operationId: workspaces/blinks/create
      tags:
        - Blinks
      security:
        - accessCookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - url
              properties:
                name:
                  type: string
                  description: O nome do blink
                  examples:
                    - Meu blink
                url:
                  type: string
                  description: A url do blink
                  examples:
                    - https://google.com
                redirectId:
                  type: string
                  description: O id do redirecionamento (se não fornecido, será gerado automaticamente)
                  examples:
                    - t96iws9z
      responses:
        '201':
          description: Blink criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blink'
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '403':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '404':
          description: Workspace não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '409':
          description: Id de redirecionamento em uso por outro blink
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    get:
      summary: Listar blinks
      operationId: workspaces/blinks/list
      tags:
        - Blinks
      security:
        - accessCookieAuth: []
      parameters:
        - blinkName:
          name: name
          in: query
          required: false
          description: O nome do blink para filtrar
          schema:
            type: string
            example: Meu blink
        - page:
          name: page
          in: query
          required: false
          description: O número da página
          schema:
            type: integer
            example: 1
        - limit:
          name: limit
          in: query
          required: false
          description: O número de blinks por página
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: Blinks listados
          content:
            application/json:
              schema:
                type: object
                required:
                  - blinks
                  - total
                properties:
                  blinks:
                    type: array
                    items:
                      $ref: '#/components/schemas/Blink'
                  total:
                    type: integer
                    example: 1
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '403':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '404':
          description: Workspace não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /workspaces/{workspaceId}/blinks/{blinkId}:
    parameters:
      - name: workspaceId
        in: path
        required: true
        description: O id do workspace
        schema:
          type: string
        example: tz4a98xxat96iws9zmbrgj3a
      - name: blinkId
        in: path
        required: true
        description: O id do blink
        schema:
          type: string
        example: tz4a98xxat96iws9zmbrgj3a

    get:
      summary: Buscar blink
      operationId: workspaces/blinks/get
      tags:
        - Blinks
      security:
        - accessCookieAuth: []
      responses:
        '200':
          description: Blink encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blink'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '403':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '404':
          description: Workspace ou blink não encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    patch:
      summary: Atualizar blink
      operationId: workspaces/blinks/update
      tags:
        - Blinks
      security:
        - accessCookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: O nome do blink
                  examples:
                    - Meu blink
                url:
                  type: string
                  description: A url do blink
                  examples:
                    - https://google.com
                redirectId:
                  type: string
                  description: O id do redirecionamento
                  examples:
                    - t96iws9z
      responses:
        '200':
          description: Blink atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blink'
        '400':
          description: Erro de validação
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '403':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '404':
          description: Blink não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '409':
          description: Id de redirecionamento em uso por outro blink
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictError'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    delete:
      summary: Remover blink
      operationId: workspaces/blinks/delete
      tags:
        - Blinks
      security:
        - accessCookieAuth: []
      responses:
        '204':
          description: Blink removido
        '401':
          description: Não autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '403':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthError'
        '404':
          description: Blink não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /{redirectId}:
    parameters:
      - name: redirectId
        in: path
        required: true
        description: O id do redirecionamento
        schema:
          type: string
        example: t96iws9z

    get:
      summary: Redirecionar
      operationId: redirect
      tags:
        - Redirecionamentos
      responses:
        '308':
          description: Redirecionamento
          headers:
            location:
              schema:
                type: string
                examples:
                  - https://google.com
            cache-control:
              schema:
                type: string
                examples:
                  - public, max-age=0, must-revalidate
        '404':
          description: Redirecionamento não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: Erro no servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

components:
  schemas:
    User:
      type: object
      required:
        - id
        - name
        - email
        - type
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          description: O id do usuário
          examples:
            - tz4a98xxat96iws9zmbrgj3a
        name:
          type: string
          description: O nome do usuário
          examples:
            - Diego Aquino
        email:
          type: string
          format: email
          description: O email do usuário
          examples:
            - diego@email.com
        createdAt:
          type: string
          format: date-time
          description: A data de criação do usuário
          examples:
            - '2021-08-01T00:00:00.000Z'
        updatedAt:
          type: string
          format: date-time
          description: A data de atualização do usuário
          examples:
            - '2021-08-01T00:00:00.000Z'

    Workspace:
      type: object
      required:
        - id
        - name
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          description: O id do workspace
          examples:
            - tz4a98xxat96iws9zmbrgj3a
        name:
          type: string
          description: O nome do workspace
          examples:
            - Meu workspace
        createdAt:
          type: string
          format: date-time
          description: A data de criação do workspace
          examples:
            - '2021-08-01T00:00:00.000Z'
        updatedAt:
          type: string
          format: date-time
          description: A data de atualização do workspace
          examples:
            - '2021-08-01T00:00:00.000Z'

    WorkspaceMember:
      type: object
      required:
        - id
        - user
        - type
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          description: O id do membro
          examples:
            - tz4a98xxat96iws9zmbrgj3a
        user:
          $ref: '#/components/schemas/User'
        type:
          $ref: '#/components/schemas/WorkspaceMemberType'
        createdAt:
          type: string
          format: date-time
          description: A data de criação do membro
          examples:
            - '2021-08-01T00:00:00.000Z'
        updatedAt:
          type: string
          format: date-time
          description: A data de atualização do membro
          examples:
            - '2021-08-01T00:00:00.000Z'

    WorkspaceMemberType:
      type: string
      description: O tipo do membro
      enum:
        - ADMINISTRATOR
        - DEFAULT
      examples:
        - DEFAULT

    Blink:
      type: object
      required:
        - id
        - name
        - url
        - redirectId
        - workspace
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          description: O id do blink
          examples:
            - tz4a98xxat96iws9zmbrgj3a
        name:
          type: string
          description: O nome do blink
          examples:
            - Meu blink
        url:
          type: string
          description: A url do blink
          examples:
            - https://google.com
        redirectId:
          type: string
          description: O id do redirecionamento
          examples:
            - t96iws9z
        creator:
          $ref: '#/components/schemas/User'
        createdAt:
          type: string
          format: date-time
          description: A data de criação do blink
          examples:
            - '2021-08-01T00:00:00.000Z'
        updatedAt:
          type: string
          format: date-time
          description: A data de atualização do blink
          examples:
            - '2021-08-01T00:00:00.000Z'

    ValidationError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: A mensagem de erro
          examples:
            - Validation error
        issues:
          type: array
          description: Os problemas de validação
          items:
            type: object
            properties:
              message:
                type: string
                description: A mensagem de erro
                examples:
                  - 'Invalid input: expected string, received number'
              code:
                type: string
                description: O código do erro
                examples:
                  - invalid_type
              path:
                type: array
                description: O caminho do erro
                items:
                  oneOf:
                    - type: string
                    - type: number
                examples:
                  - - name
            additionalProperties: true
        code:
          type: string
          description: O código do erro
          examples:
            - BAD_REQUEST

    AuthError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: A mensagem de erro
          examples:
            - Unauthorized
        code:
          type: string
          description: O código do erro
          examples:
            - UNAUTHORIZED

    NotFoundError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: A mensagem de erro
          examples:
            - Not found
        code:
          type: string
          description: O código do erro
          examples:
            - NOT_FOUND

    ConflictError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: A mensagem de erro
          examples:
            - Conflict
        code:
          type: string
          description: O código do erro
          examples:
            - CONFLICT

    InternalServerError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: A mensagem de erro
          examples:
            - Internal server error
        code:
          type: string
          description: O código do erro
          examples:
            - INTERNAL_SERVER_ERROR

  securitySchemes:
    accessCookieAuth:
      type: apiKey
      in: cookie
      name: blink:access

    refreshCookieAuth:
      type: apiKey
      in: cookie
      name: blink:access
